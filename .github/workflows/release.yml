name: Release

on:
  push:
    branches:
      - main

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json

      - name: Announce next version
        if: steps.release.outputs.release_created
        env:
          version: ${{ steps.release.outputs.version }}
        run: echo "The next version will be released as **${version}!**" >> "$GITHUB_STEP_SUMMARY"

  build:
    name: Build and Test
    needs: release-please
    uses: ./.github/workflows/build.yml
    permissions:
      contents: read
    with:
      python-version: "3.13"
      runner: ubuntu-latest
      version: ${{ needs.release-please.outputs.version }}

  publish:
    name: Publish to PyPI
    if: needs.release-please.outputs.release_created
    runs-on: ubuntu-latest
    needs: [build, release-please]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v5
        with:
          name: semmy-${{ needs.release-please.outputs.version }}
          path: dist/

      - name: Set up Python 3.13
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install uv
        run: |
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
          pipx install uv
          uv --version

      - name: Publish to PyPI
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: uv publish

      - name: Summary
        env:
          version: ${{ needs.release-please.outputs.version }}
          tag_name: ${{ needs.release-please.outputs.tag_name }}
          repository: ${{ github.repository }}
        run: |
          {
            echo "## ðŸŽ‰ Release Summary"
            echo ""
            echo "Successfully released version **$version**"
            echo ""
            echo "### ðŸ“¦ Package Links"
            echo "- **PyPI**: [semmy $version](https://pypi.org/project/semmy/$version/)"
            echo "- **GitHub Release**: [$tag_name](https://github.com/$repository/releases/tag/$tag_name)"
            echo ""
            echo "### ðŸ“¥ Installation"
            echo '```bash'
            echo "pip install semmy==$version"
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"
